{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sysadmin\\\\Desktop\\\\Github\\\\14\\\\src\\\\components\\\\MoviesList.js\";\nimport React from 'react';\nimport Movie from './Movie';\nimport classes from './MoviesList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = props => {\n  // Check if props.movies is an array before mapping\n  if (!props.movies || props.movies.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No movies found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this); // Display a message if no movies are available\n  }\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes['movies-list'],\n    children: props.movies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n      title: movie.title,\n      releaseDate: movie.releaseDate,\n      openingText: movie.openingText\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","Movie","classes","jsxDEV","_jsxDEV","MovieList","props","movies","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","movie","title","releaseDate","openingText","id","_c","$RefreshReg$"],"sources":["C:/Users/sysadmin/Desktop/Github/14/src/components/MoviesList.js"],"sourcesContent":["import React from 'react';\n\nimport Movie from './Movie';\nimport classes from './MoviesList.module.css';\n\nconst MovieList = (props) => {\n  // Check if props.movies is an array before mapping\n  if (!props.movies || props.movies.length === 0) {\n    return <p>No movies found.</p>; // Display a message if no movies are available\n  }\n\n  return (\n    <ul className={classes['movies-list']}>\n      {props.movies.map((movie) => (\n        <Movie\n          key={movie.id}\n          title={movie.title}\n          releaseDate={movie.releaseDate}\n          openingText={movie.openingText}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,OAAO,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAC3B;EACA,IAAI,CAACA,KAAK,CAACC,MAAM,IAAID,KAAK,CAACC,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE;IAC9C,oBAAOJ,OAAA;MAAAK,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC,CAAC;EAClC;EAEA,oBACET,OAAA;IAAIU,SAAS,EAAEZ,OAAO,CAAC,aAAa,CAAE;IAAAO,QAAA,EACnCH,KAAK,CAACC,MAAM,CAACQ,GAAG,CAAEC,KAAK,iBACtBZ,OAAA,CAACH,KAAK;MAEJgB,KAAK,EAAED,KAAK,CAACC,KAAM;MACnBC,WAAW,EAAEF,KAAK,CAACE,WAAY;MAC/BC,WAAW,EAAEH,KAAK,CAACG;IAAY,GAH1BH,KAAK,CAACI,EAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAId,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET,CAAC;AAACQ,EAAA,GAlBIhB,SAAS;AAoBf,eAAeA,SAAS;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}